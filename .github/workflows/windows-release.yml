name: Rust Windows release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci-checks:
    name: CI Checks
    if: github.event_name != 'release'
    permissions:
      contents: write
      actions: read
      checks: write
    runs-on: windows-latest 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose

    - name: Formatting
      run: cargo fmt -- --check

    - name: Clippy
      run: cargo clippy --target x86_64-pc-windows-msvc -- -D warnings

  release-build:
      name: Release Build
      if: github.event_name == 'release' && github.event.action == 'published'

      permissions:
        contents: write

      runs-on: windows-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      # - name: Install MSVC (Windows only)
      #   if: runner.os == 'Windows'
      #   uses: ilammy/msvc-dev-cmd@v1

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #       python-version: '3.10'

      # - name: Cache pip
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.cache/pip
      #     key: ${{ runner.os }}-pip-${{ hashFiles('desktop-layout/py_get_layout/requirements.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      # - name: Install Nuitka and dependencies and Build py to exe
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install nuitka
      #     pip install -r desktop-layout/py_get_layout/requirements.lock
      #     cd desktop-layout/py_get_layout
      #     python -m nuitka --onefile --standalone --assume-yes-for-downloads --output-dir=..\assets .\src\get_icon_layout.py
      #     cd ${{ github.workspace }}

      - name: Build Release Binary desku
        run: cargo build --release --bin desku --features=only-usual

      - name: Build Release Binary desks
        run: cargo build --release --bin desks

      - name: Build Release Binary desks-tray
        run: cargo build --release --bin desks-tray

      - name: Build Release Binary fastlink-slim
        run: cargo build --release --features=fastlink-slim --bin fastlink-slim

      - name: Build Release Binary fastlink
        run: cargo build --release --features=fastlink-full --bin fastlink

  
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: target/release/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
