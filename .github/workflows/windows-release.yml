name: Rust Windows release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci-checks:
    name: CI Checks
    if: github.event_name != 'release'
    permissions:
      contents: write
      actions: read
      checks: write
    runs-on: windows-latest 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose

    - name: Formatting
      run: cargo fmt -- --check

    - name: Clippy
      run: cargo clippy --target x86_64-pc-windows-msvc -- -D warnings

  release-build:
      name: Release Build
      if: github.event_name == 'release' && github.event.action == 'published'

      permissions:
        contents: write

      runs-on: windows-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        
      - name: Build Release Binary fastlink Full-features
        run: cargo build --release --features=fastlink-full --bin fastlink --verbose

      - name: Build Release Binary fastlink Slim-features
        run: cargo build --release --features=fastlink-slim --bin fastlink-slim --verbose
        
      # - name: Build Release Binary desks
      #   run: cargo build --release --features=desktop_setter --bin desks --verbose
  
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: target/release/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
