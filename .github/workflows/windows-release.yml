name: Rust Windows release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci-checks:
    if: github.event_name != 'release'
    name: CI Checks
    runs-on: windows-latest 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build 
      run: cargo build --verbose

    - name: Test
      run: cargo test --verbose

    - name: Formatting
      run: cargo fmt -- --check

    - name: Clippy
      run: cargo clippy --target x86_64-pc-windows-msvc -- -D warnings

    - name: Generate docs
      run: cargo doc --no-deps

  release-build:
      name: Release Build
      if: github.event_name == 'release'
      runs-on: windows-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        
      - name: Build Release Binary
        run: cargo build --release --verbose
  
      - name: Package Artifacts
        shell: pwsh
        run: |
          $version = ($env:GITHUB_REF -replace "refs/tags/", "") -replace "^v", ""
          mkdir release -Force
          Copy-Item target/release/*.exe release/
          Compress-Archive -Path release/* -DestinationPath "app-$version-windows-x64.zip"
  
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: app-*-windows-x64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
